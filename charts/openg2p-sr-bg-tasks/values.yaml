global:
  keycloakBaseUrl: https://keycloak.openg2p.sandbox.net
  keycloakIssuerUrl: '{{ tpl .Values.global.keycloakBaseUrl $ }}/realms/master'

openg2p-sr-bg-tasks-celery-beat-producers:
  enabled: true

  postgresqlInstallationName: '{{ .Release.Name }}-postgresql'
  redisInstallationName: '{{ .Release.Name }}-redis-master'

  envVars:
    SR_CELERY_BEAT_DB_HOSTNAME: '{{ tpl .Values.postgresqlInstallationName $ }}'
    SR_CELERY_BEAT_DB_PORT: 5432
    SR_CELERY_BEAT_DB_DBNAME: socialregistrydb
    SR_CELERY_BEAT_DB_USERNAME: sruser

    SR_CELERY_BEAT_CELERY_BROKER_URL: redis://{{ tpl .Values.redisInstallationName $ }}:6379/0
    SR_CELERY_BEAT_CELERY_BACKEND_URL: redis://{{ tpl .Values.redisInstallationName $ }}:6379/0

  envVarsFrom:
    SR_CELERY_BEAT_DB_PASSWORD:
      secretKeyRef:
        name: '{{ tpl .Values.postgresqlInstallationName $ }}'
        key: password

openg2p-sr-bg-tasks-celery-workers:
  enabled: true

  postgresqlInstallationName: '{{ .Release.Name }}-postgresql'
  redisInstallationName: '{{ .Release.Name }}-redis-master'
  idgeneratorInstallationName: '{{ .Release.Name }}-idgenerator'

  envVars:
    SR_CELERY_WORKERS_DB_HOSTNAME: '{{ tpl .Values.postgresqlInstallationName $ }}'
    SR_CELERY_WORKERS_DB_PORT: 5432
    SR_CELERY_WORKERS_DB_DBNAME: socialregistrydb
    SR_CELERY_WORKERS_DB_USERNAME: sruser

    SR_CELERY_WORKERS_CELERY_BROKER_URL: redis://{{ tpl .Values.redisInstallationName $ }}:6379/0
    SR_CELERY_WORKERS_CELERY_BACKEND_URL: redis://{{ tpl .Values.redisInstallationName $ }}:6379/0

    SR_CELERY_WORKERS_AUTH_URL: '{{ tpl .Values.global.keycloakIssuerUrl $ }}/protocol/openid-connect/token'
    SR_CELERY_WORKERS_AUTH_CLIENT_ID: 'openg2p-sr-{{ .Release.Namespace }}'
    SR_CELERY_WORKERS_AUTH_CLIENT_SECRET: ''

    SR_CELERY_WORKERS_MOSIP_GET_UIN_URL: 'http://{{ tpl .Values.idgeneratorInstallationName $ }}/v1/idgenerator/uin'
    SR_CELERY_WORKERS_MOSIP_UPDATE_UIN_URL: 'http://{{ tpl .Values.idgeneratorInstallationName $ }}/v1/idgenerator/uin'

  envVarsFrom:
    SR_CELERY_WORKERS_DB_PASSWORD:
      secretKeyRef:
        name: '{{ tpl .Values.postgresqlInstallationName $ }}'
        key: password

